#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600 // testb
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {


    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        zerozero: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_0>;
            label = "NEW_MACRO";
        };

        yahoomail: yahoomail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp M &kp K &kp O &kp S &kp M &kp LEFT_BRACKET &kp Y &kp A &kp H &kp O &kp O &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "YAHOOMAIL";
        };

        taskmanager: taskmanager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(ESCAPE))>;
            label = "TASKMANAGER";
        };

        scsho: scsho {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(S))>;
            label = "SCSHO";
        };

        zeze: zeze {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
            label = "ZEZE";
        };

        ctrlaltdelete: ctrlaltdelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(DEL))>;
            label = "CTRLALTDELETE";
        };

        altf4: altf4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALTF4";
        };

        henkan_ly: muhen_ly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 5 &kp INT_HENKAN>;
            label = "MUHEN_LY";
        };

        si_shift: si_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp I>;
            label = "SI_SHIFT";
        };

        yo_shift: yo_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O>;
            label = "YO_SHIFT";
        };

        capslock_ly: capslock_ly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CAPS &to 0>;
            label = "CAPSLOCK_LY";
        };

        ka_shift: ka_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp A>;
            label = "KA_SHIFT";
        };

        ki_shift: ki_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp I>;
            label = "KI_SHIFT";
        };

        ku_shift: ku_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp U>;
            label = "KU_SHIFT";
        };

        ke_shift: ke_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp E>;
            label = "KE_SHIFT";
        };

        ko_shift: ko_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp O>;
            label = "KO_SHIFT";
        };

        sa_shift: sa_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A>;
            label = "SA_SHIFT";
        };

        su_shift: su_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp U>;
            label = "SU_SHIFT";
        };

        se_shift: se_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E>;
            label = "SE_SHIFT";
        };

        so_shift: so_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O>;
            label = "SO_SHIFT";
        };

        ta_shift: ta_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp A>;
            label = "TA_SHIFT";
        };

        ti_shift: ti_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I>;
            label = "TI_SHIFT";
        };

        tu_shift: tu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp U>;
            label = "TU";
        };

        te_shift: te_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp E>;
            label = "TE_SHIFT";
        };

        to_shift: to_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp O>;
            label = "TO_SHIFT";
        };

        na_shift: na_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp A>;
            label = "NA_SHIFT";
        };

        ni_shift: ni_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp I>;
            label = "NI_SHIFT";
        };

        nu_shift: nu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp U>;
            label = "NU_SHIFT";
        };

        ne_shift: ne_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E>;
            label = "NE_SHIFT";
        };

        no_shift: no_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp O>;
            label = "NO_SHIFT";
        };

        ha_shift: ha_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A>;
            label = "HA_SHIFT";
        };

        hi_shift: hi_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp I>;
            label = "HI_SHIFT";
        };

        hu_shift: hu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp U>;
            label = "HU_SHIFT";
        };

        he_shift: he_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E>;
            label = "HE_SHIFT";
        };

        ho_shift: ho_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp O>;
            label = "HO_SHIFT";
        };

        ma_shift: ma_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A>;
            label = "MA_SHIFT";
        };

        mi_shift: mi_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp I>;
            label = "MI_SHIFT";
        };

        mu_shift: mu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp U>;
            label = "MU_SHIFT";
        };

        me_shift: me_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp E>;
            label = "ME_SHIFT";
        };

        mo_shift: mo_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O>;
            label = "MO_SHIFT";
        };

        ya_shift: ya_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp A>;
            label = "YA_SHIFT";
        };

        yu_shift: yu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp U>;
            label = "YU_SHIFT";
        };

        ra_shift: ra_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp A>;
            label = "RA_SHIFT";
        };

        ri_shift: ri_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp I>;
            label = "RI_SHIFT";
        };

        ru_shift: ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp U>;
            label = "RU";
        };

        re_shift: re_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp E>;
            label = "RE_SHIFT";
        };

        ro_shift: ro_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp O>;
            label = "RO_SHIFT";
        };

        wa_shift: wa_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp A>;
            label = "WA_SHIFT";
        };

        wo_shift: wo_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp O>;
            label = "WO_SHIFT";
        };

        nn_shift: nn_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp N>;
            label = "NN_SHIFT";
        };

        xa_shift: xa_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp A>;
            label = "XA_SHIFT";
        };

        xi_shift: xi_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp I>;
            label = "XI_SHIFT";
        };

        xu: xu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp U>;
            label = "XU";
        };

        xe_shift: xe_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp E>;
            label = "XE_SHIFT";
        };

        xo_shift: xo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp O>;
            label = "XO";
        };

        xtu_shift: xtu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp T &kp U>;
            label = "XTU_SHIFT";
        };

        xya_shift: xya_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp Y &kp A>;
            label = "XYA_SHIFT";
        };

        xyu_shift: xyu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp Y &kp U>;
            label = "XYU_SHIFT";
        };

        xyo: xyo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp Y &kp O>;
            label = "XYO";
        };

        za_shift: za_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp A>;
            label = "ZA_SHIFT";
        };

        zi_shift: zi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp I>;
            label = "ZI";
        };

        zu_shift: zu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp U>;
            label = "ZU_SHIFT";
        };

        ze_shift: ze_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp E>;
            label = "ZE_SHIFT";
        };

        zo_shift: zo_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp O>;
            label = "ZO_SHIFT";
        };

        da_shift: da_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp A>;
            label = "DA_SHIFT";
        };

        di_shift: di_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp I>;
            label = "DI_SHIFT";
        };

        du_shift: du_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp U>;
            label = "DU_SHIFT";
        };

        de_shift: de_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp E>;
            label = "DE_SHIFT";
        };

        do_shift: do_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O>;
            label = "DO_SHIFT";
        };

        ba_shift: ba_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp A>;
            label = "BA_SHIFT";
        };

        bi_shift: bi_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp I>;
            label = "BI_SHIFT";
        };

        bu_shift: bu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp U>;
            label = "BU_SHIFT";
        };

        be_shift: be_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E>;
            label = "BE_SHIFT";
        };

        bo_shift: bo_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp O>;
            label = "BO_SHIFT";
        };

        pa_shift: pa_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A>;
            label = "PA_SHIFT";
        };

        pi_shift: pi_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp I>;
            label = "PI_SHIFT";
        };

        pu_shift: pu_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp U>;
            label = "PU_SHIFT";
        };

        pe_shift: pe_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp E>;
            label = "PE_SHIFT";
        };

        po_shift: po_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp O>;
            label = "PO_SHIFT";
        };
    };


    behaviors {
        ctrl_caps_macro: ctrl_caps_macro {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold CTRL / Tap MACRO";
            #binding-cells = <0>;
            flavor = "hold-preferred"; // または "balanced"
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&capslock_ly>;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a_shift {
            bindings = <&kp A>;
            key-positions = <43 15>;
        };

        xa {
            bindings = <&xa_shift>;
            key-positions = <43 1>;
        };

        e {
            bindings = <&kp E>;
            key-positions = <2 43>;
        };

        ri {
            bindings = <&ri_shift>;
            key-positions = <43 3>;
        };

        xya {
            bindings = <&xya_shift>;
            key-positions = <43 4>;
        };

        re {
            bindings = <&re_shift>;
            key-positions = <43 5>;
        };

        yo {
            bindings = <&yo_shift>;
            key-positions = <7 46>;
        };

        ba {
            bindings = <&ba_shift>;
            key-positions = <43 7>;
        };

        ni {
            bindings = <&ni_shift>;
            key-positions = <46 8>;
        };

        ru {
            bindings = <&ru_shift>;
            key-positions = <46 9>;
        };

        ma {
            bindings = <&ma_shift>;
            key-positions = <46 10>;
        };

        xe {
            bindings = <&xe_shift>;
            key-positions = <46 11>;
        };

        wo {
            bindings = <&wo_shift>;
            key-positions = <43 14>;
        };

        a {
            bindings = <&kp A>;
            key-positions = <43 15>;
        };

        na {
            bindings = <&na_shift>;
            key-positions = <16 43>;
        };

        xyu {
            bindings = <&xyu_shift>;
            key-positions = <17 43>;
        };

        mo {
            bindings = <&mo_shift>;
            key-positions = <43 18>;
        };

        mi {
            bindings = <&mi_shift>;
            key-positions = <46 22>;
        };

        o {
            bindings = <&kp O>;
            key-positions = <46 23>;
        };

        no {
            bindings = <&no_shift>;
            key-positions = <46 24>;
        };

        xyo {
            bindings = <&xyo>;
            key-positions = <46 25>;
        };

        po {
            bindings = <&po_shift>;
            key-positions = <43 25>;
        };

        xtu {
            bindings = <&xtu_shift>;
            key-positions = <46 26>;
        };

        xu {
            bindings = <&xu>;
            key-positions = <43 29>;
        };

        haifun {
            bindings = <&kp MINUS>;
            key-positions = <43 30>;
        };

        ro {
            bindings = <&ro_shift>;
            key-positions = <43 31>;
        };

        ya {
            bindings = <&ya_shift>;
            key-positions = <43 32>;
        };

        xi {
            bindings = <&xi_shift>;
            key-positions = <43 33>;
        };

        nu {
            bindings = <&nu_shift>;
            key-positions = <46 36>;
        };

        pu {
            bindings = <&pu_shift>;
            key-positions = <43 36>;
        };

        yu {
            bindings = <&yu_shift>;
            key-positions = <46 37>;
        };

        mu {
            bindings = <&mu_shift>;
            key-positions = <46 38>;
        };

        pe {
            bindings = <&pe_shift>;
            key-positions = <43 38>;
        };

        wa {
            bindings = <&wa_shift>;
            key-positions = <46 39>;
        };

        xo {
            bindings = <&xo_shift>;
            key-positions = <46 40>;
        };

        four {
            bindings = <&kp LS(LEFT_BRACKET)>;
            key-positions = <42 46 17>;
        };

        five {
            bindings = <&kp RS(RIGHT_BRACKET)>;
            key-positions = <42 46 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp LEFT_ALT           &kp Q  &kp W  &kp E      &kp R             &kp T                            &kp UP                &kp Y        &kp U       &kp I              &kp O    &kp P     &kp BSPC
&mt LCTRL CAPSLOCK     &kp A  &kp S  &kp D      &kp F             &kp G                  &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J       &kp K              &kp L    &kp SEMI  &mt RCTRL K_APP
&mt LEFT_SHIFT ESCAPE  &kp Z  &kp X  &kp C      &kp V             &kp B        &tog 4              &kp DOWN              &kp N        &kp M       &kp COMMA          &kp DOT  &kp FSLH  &kp RSHIFT
                                     &lt 3 TAB  &kp INT_MUHENKAN  &lt 1 ENTER                                            &lt 2 SPACE  &henkan_ly  &kp RIGHT_COMMAND
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &none  &none           &none      &none            &none                                               &mmv MOVE_UP                     &mkp LCLK          &mkp MCLK  &mkp RCLK  &none      &none              &kp RIGHT_ALT
&trans  &none  &kp INT_YEN     &kp EQUAL  &kp INT_RO       &kp LEFT_BRACKET                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp RIGHT_BRACKET  &kp BSLH   &kp MINUS  &kp UNDER  &kp DOUBLE_QUOTES  &kp RCTRL
&trans  &none  &kp LS(INT_RO)  &kp PLUS   &kp LS(INT_YEN)  &kp LS(LEFT_BRACKET)  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp RIGHT_BRACE    &kp PIPE   &none      &none      &none              &trans
                               &trans     &trans           &trans                                                                               &trans             &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp PAGE_UP    &yahoomail       &none      &none      &altf4       &none                                           &mmv MOVE_UP                     &mkp LCLK        &mkp MCLK     &mkp RCLK  &taskmanager  &scsho     &kp HOME
&trans         &kp KP_NUMBER_1  &kp KP_N2  &kp KP_N3  &kp KP_N4    &kp KP_N5                       &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &kp KP_N6        &kp KP_N7     &kp KP_N8  &kp KP_N9     &kp KP_N0  &trans
&kp PAGE_DOWN  &none            &none      &none      &kp KP_PLUS  &kp KP_MINUS  &ctrlaltdelete                    &mmv MOVE_DOWN                   &kp KP_ASTERISK  &kp KP_SLASH  &none      &kp KP_DOT    &zeze      &kp END
                                           &kp DEL    &kp BSPC     &kp ENTER                                                                        &trans           &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(SEMICOLON) LC(MINUS)>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&mt LEFT_ALT UP_ARROW      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                      &mmv MOVE_UP                     &kp F6        &kp F7         &kp F8        &kp F9                &kp F10       &mt RIGHT_ALT F11
&mt LCTRL LEFT_ARROW       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0  &mt RCTRL RIGHT_ARROW
&mt LEFT_SHIFT DOWN_ARROW  &kp EXCL      &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &kp C_MUTE                    &mmv MOVE_DOWN                   &kp LCTRL     &kp AMPERSAND  &kp ASTRK     &kp LEFT_PARENTHESIS  &zerozero     &kp F12
                                                       &trans        &trans        &trans                                                                       &trans        &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans                          &trans          &trans  &trans  &kp KP_NUMLOCK  &kp SCROLLLOCK  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &tog 4            &trans          &trans  &trans  &trans          &trans          &trans  &trans
                                    &trans        &trans        &trans                                          &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp LEFT_ALT    &kp PERIOD  &ka_shift  &ta_shift  &ko_shift         &sa_shift                      &trans          &ra_shift    &ti_shift       &ku_shift      &tu_shift  &pi_shift  &kp RIGHT_ALT
&ctrl_caps_macro    &kp U       &si_shift  &te_shift  &ke_shift         &se_shift              &trans  &trans  &trans  &ha_shift    &to_shift       &ki_shift      &kp I      &nn_shift  &kp RCTRL
&kp LEFT_SHIFT  &trans      &hi_shift  &su_shift  &hu_shift         &he_shift    &trans            &trans          &me_shift    &so_shift       &ne_shift      &ho_shift  &kp SLASH  &kp RIGHT_SHIFT
                                       &lt 3 TAB  &kp INT_MUHENKAN  &lt 1 ENTER                                    &lt 2 SPACE  &kp INT_HENKAN  &kp RIGHT_WIN
            >;
        };
    };
};
