#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600 // testb
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp LEFT_ALT    &kp Q  &kp W  &kp E      &kp R             &kp T                               &kp UP                &kp Y        &kp U           &kp I          &kp O    &kp P     &kp BSPC
&mt LCTRL ESC   &kp A  &kp S  &kp D      &kp F             &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J           &kp K          &kp L    &kp SEMI  &mt RCTRL K_APP
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V             &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M           &kp COMMA      &kp DOT  &kp FSLH  &kp RSHIFT
                              &lt 1 TAB  &kp INT_MUHENKAN  &lt 3 ENTER                                               &lt 2 SPACE  &kp INT_HENKAN  &kp RIGHT_WIN
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &none  &none      &none      &none     &none                                    &mmv MOVE_UP                     &none     &none     &none      &none      &none         &kp RIGHT_ALT
&trans  &none  &kp BSLH   &kp CARET  &kp BSLH  &kp AT                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp COLON     &kp RCTRL
&trans  &none  &kp UNDER  &kp TILDE  &kp PIPE  &kp GRAVE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp LBRC  &kp RBRC  &none      &none      &kp ASTERISK  &trans
                          &trans     &trans    &trans                                                                    &kp INS   &kp DEL   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp PAGE_UP    &kp EXCL      &kp AT        &kp HASH   &kp DLLR     &kp PRCNT                               &mmv MOVE_UP                     &mkp LCLK        &mkp MCLK     &mkp RCLK  &none       &none      &kp HOME
&trans         &kp KP_N1     &kp KP_N2     &kp KP_N3  &kp KP_N4    &kp KP_N5               &mmv MOVE_LEFT  &mkp MCLK       &mmv MOVE_RIGHT  &kp KP_N6        &kp KP_N7     &kp KP_N8  &kp KP_N9   &kp KP_N0  &trans
&kp PAGE_DOWN  &out OUT_USB  &out OUT_BLE  &none      &kp KP_PLUS  &kp KP_MINUS  &trans                    &mmv MOVE_DOWN                   &kp KP_ASTERISK  &kp KP_SLASH  &none      &kp KP_DOT  &none      &kp END
                                           &kp DEL    &kp BSPC     &kp ENTER                                                                &trans           &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&mt LEFT_ALT UP_ARROW      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                      &mmv MOVE_UP                     &kp F6         &kp F7        &kp F8                &kp F9                 &kp F10       &kp F11
&mt LCTRL LEFT_ARROW       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &mt RCTRL RIGHT_ARROW
&mt LEFT_SHIFT DOWN_ARROW  &kp EXCL      &kp DQT       &kp HASH      &kp DOLLAR    &kp PERCENT   &kp C_MUTE                    &mmv MOVE_DOWN                   &kp AMPERSAND  &kp SQT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none         &kp F12
                                                       &trans        &trans        &trans                                                                       &trans         &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
